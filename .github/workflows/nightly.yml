name: Nightly release

on:
  workflow_dispatch:

concurrency: keycloak-release

env:
  KEYCLOAK_REPOSITORY: 'stianst/keycloak'

jobs:
  keycloak-release:
    name: Keycloak
    runs-on: ubuntu-latest

    steps:
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu' # ???
        java-version: 11
        server-id: jboss-snapshots-repository
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Cache Maven packages
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
        key: cache-${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: cache-${{ runner.os }}-m2

    - name: Checkout Keycloak repository
      uses: actions/checkout@v3
      with:
        repository: ${{ env.KEYCLOAK_REPOSITORY }}
        token: ${{ secrets.GH_TOKEN }}
        path: keycloak

    - name: Calculate version
      id: version
      working-directory: ./keycloak
      run: |
        export VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        echo "::set-output name=version::$VERSION"

    - name: Check version
      run: |
        echo "Version: ${{steps.version.outputs.version}}"
        
    - name: Deploy Keycloak
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      working-directory: ./keycloak
      run: mvn -nsu -B -Pgpg,jboss-release,nexus-staging,distribution-downloads -DskipTests -DskipTestsuite -DretryFailedDeploymentCount=10 -DautoReleaseAfterClose=true clean deploy

    - name: Upload Keycloak release
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      working-directory: ./keycloak
      run: |
        gh release list -R ${{ env.KEYCLOAK_REPOSITORY }} | grep ^nightly >/dev/null && gh release delete -R ${{ env.KEYCLOAK_REPOSITORY }} nightly -y
        gh release create -R ${{ env.KEYCLOAK_REPOSITORY }} -p --target main --title nightly --notes "Nightly" nightly
        gh release upload -R ${{ env.KEYCLOAK_REPOSITORY }} nightly ./distribution/downloads/target/${{steps.version.outputs.version}}/*
        
    # Release the container
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Container metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: quay.io/${{ env.KEYCLOAK_REPOSITORY }}
        tags: |
          type=raw,value=nightly
          
    - name: Login to Quay
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_TOKEN }}
        
    - name: Copy Keycloak package
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      working-directory: ./keycloak
      run: |
        cp ./distribution/downloads/target/${{steps.version.outputs.version}}/keycloak-${{steps.version.outputs.version}}.tar.gz ./quarkus/container

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: keycloak/quarkus/container
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: KEYCLOAK_DIST=keycloak-${{steps.version.outputs.version}}.tar.gz

    - name: Update nightly tag
      working-directory: ./keycloak
      run: |
        git tag -f nightly | true
        git push origin nightly --force
